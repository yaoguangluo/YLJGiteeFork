package OSI.OSU.ASQ.PSU.OCI.ME.analysis;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import OSI.OSU.ASQ.PSU.view.obj.WordFrequency;
import OSI.OSU.OCI.AVC.SUQ.SVQ.MPC.fhmm.EmotionMap;
import OSI.OSU.PEQ.AMV.ECS.test.SensingTest;
public interface Analyzer {
	void init() throws IOException;
	void initMixed() throws IOException;
	List<String> parserString(String input);
	void addFixWords(int charPosition, String inputString,StringBuilder[] fixWords);
	Map<String, WordFrequency> getWordFrequencyMap(List<String> sets) throws IOException;
	List<WordFrequency> sortWordFrequencyMap(Map<String,WordFrequency> map) throws IOException;
	List<WordFrequency> getWordFrequency(List<String> sets)throws IOException;
	Map<Integer,WordFrequency> getWordFrequencyByReturnSortMap(List<String> sets) throws IOException;
	Map<Integer,WordFrequency> sortWordFrequencyMapToUnsortMap(Map<String,WordFrequency> map);
	Map<Integer,WordFrequency> sortWordFrequencyMapToSortMap(Map<String,WordFrequency> map);
	Map<String,WordFrequency> parserStringByReturnFrequencyMap(String inputString);
	Map<String,String> getPosEnToCn();
	Map<String,String> getPosEnToEn();
	Map<String,String> getPosCnToCn();
	Map<String,String> getEnToCn();
	Map<String,String> getCnToEn();
	Map<String,String> getFullEnToCn();
	Map<String,String> getFullCnToEn();
	String[] parserEnglishString(String englishString);
	List<String> parserMixedString(String mixedString);
	Map<String,WordFrequency> parserMixStringByReturnFrequencyMap(String key);
	void studyNewWord(String study, String token, String posStudy);
	Map<String, String> getStudyPos();
	Map<String, String> getPinYin();
	Map<String, String> getCtT();
	Map<String, String> getCtK();
	Map<String, String> getCtJ();
	Map<String, String> getCtR();
	Map<String, String> getCtA();
	EmotionMap getEmotionMap();
	SensingTest getSensingTest();
}