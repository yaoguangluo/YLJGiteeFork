package demo1;

import com.jogamp.opengl.util.gl2.GLUT;
  
 


           //ÃƒÂ¨Ã‚Â¿Ã¢â€žÂ¢ÃƒÂ©Ã¢â‚¬Â¡Ã…â€™ÃƒÂ§Ã‚Â±Ã‚Â»ÃƒÂ¦Ã¢â‚¬Â°Ã¢â€šÂ¬ÃƒÂ¥Ã…â€œÃ‚Â¨ÃƒÂ¥Ã…â€™Ã¢â‚¬Â¦ÃƒÂ¦Ã¢â‚¬ï¿½Ã‚Â¹ÃƒÂ¥Ã¯Â¿Â½Ã‹Å“ÃƒÂ¤Ã‚ÂºÃ¢â‚¬Â   
import javax.media.opengl.GL;  
import javax.media.opengl.GL2;  
import javax.media.opengl.GLAutoDrawable;  
import javax.media.opengl.GLEventListener;  
import javax.media.opengl.fixedfunc.GLLightingFunc;
import javax.media.opengl.glu.GLU;                //ÃƒÂ¨Ã‚Â¿Ã¢â€žÂ¢ÃƒÂ©Ã¢â‚¬Â¡Ã…â€™ÃƒÂ§Ã‚Â±Ã‚Â»ÃƒÂ¦Ã¢â‚¬Â°Ã¢â€šÂ¬ÃƒÂ¥Ã…â€œÃ‚Â¨ÃƒÂ¥Ã…â€™Ã¢â‚¬Â¦ÃƒÂ¦Ã¢â‚¬ï¿½Ã‚Â¹ÃƒÂ¥Ã¯Â¿Â½Ã‹Å“ÃƒÂ¤Ã‚ÂºÃ¢â‚¬Â   
/** 
 * 
 * @ÃƒÂ¦Ã‚Â¬Ã‚Â¢ÃƒÂ¨Ã‚Â¿Ã…Â½ÃƒÂ¦Ã¯Â¿Â½Ã‚Â¥ÃƒÂ¥Ã‹â€ Ã‚Â°ÃƒÂ¥Ã‚Â­Ã¯Â¿Â½ÃƒÂ§Ã¢â‚¬ËœÃ…â€œITÃƒÂ¥Ã¯Â¿Â½Ã…Â¡ÃƒÂ¥Ã‚Â®Ã‚Â¢ÃƒÂ§Ã‚Â©Ã‚ÂºÃƒÂ©Ã¢â‚¬â€�Ã‚Â´ 
 *  
 */  
public class shape implements GLEventListener 
{    
    GL2 gl;  
    GLU glu;  
    GLUT glut;  
    float whiteLight[] = {0.2f, 0.2f, 0.2f, 1.0f};  
    float sourceLight[] = {0.8f, 0.8f, 0.8f, 1.0f};  
    float lightPos[] = {0.0f, 0.0f, 0.0f, 1.0f};  
    float fMoonRot = 0.0f;  
    float fEarthRot = 0.0f;  
    float k= -3.0f;
    public void init(GLAutoDrawable drawable) 
    {  
        gl =  drawable.getGL().getGL2();    //ÃƒÂ¤Ã‚Â¸Ã‚Â»ÃƒÂ¨Ã‚Â¦Ã¯Â¿Â½ÃƒÂ¥Ã‚Â°Ã‚Â±ÃƒÂ¦Ã‹Å“Ã‚Â¯ÃƒÂ¨Ã‚Â¿Ã¢â€žÂ¢ÃƒÂ©Ã¢â‚¬Â¡Ã…â€™ÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬ËœÃƒÂ§Ã¢â‚¬ï¿½Ã…Â¸ÃƒÂ¥Ã¯Â¿Â½Ã‹Å“ÃƒÂ¥Ã…â€™Ã¢â‚¬â€œ  
        glu = new GLU();  
        glut= new GLUT();  
        // Light values and coordinates  
        gl.glEnable(GL.GL_DEPTH_TEST);  // ÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â¨ÃƒÂ¦Ã‚Â·Ã‚Â±ÃƒÂ¥Ã‚ÂºÃ‚Â¦ÃƒÂ¦Ã‚ÂµÃ¢â‚¬Â¹ÃƒÂ¨Ã‚Â¯Ã¢â‚¬Â¢  
        gl.glFrontFace(GL.GL_CCW);      //ÃƒÂ¨Ã‚Â®Ã‚Â¾ÃƒÂ§Ã‚Â½Ã‚Â®CCWÃƒÂ¦Ã¢â‚¬â€œÃ‚Â¹ÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬ËœÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ¢Ã¢â€šÂ¬Ã…â€œÃƒÂ¦Ã‚Â­Ã‚Â£ÃƒÂ©Ã¯Â¿Â½Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã¯Â¿Â½ÃƒÂ¯Ã‚Â¼Ã…â€™CCWÃƒÂ¥Ã¯Â¿Â½Ã‚Â³CounterClockWiseÃƒÂ¯Ã‚Â¼Ã…â€™ÃƒÂ©Ã¢â€šÂ¬Ã¢â‚¬Â ÃƒÂ¦Ã¢â‚¬â€�Ã‚Â¶ÃƒÂ©Ã¢â‚¬â„¢Ã‹â€   
        gl.glEnable(GL.GL_CULL_FACE);       //ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â¨GL_CULL_FACEÃƒÂ§Ã‚Â¬Ã‚Â¦ÃƒÂ¥Ã¯Â¿Â½Ã‚Â·ÃƒÂ¥Ã‚Â¸Ã‚Â¸ÃƒÂ©Ã¢â‚¬Â¡Ã¯Â¿Â½ÃƒÂ¨Ã‚Â°Ã†â€™ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â¨glEnableÃƒÂ¥Ã¢â‚¬Â¡Ã‚Â½ÃƒÂ¦Ã¢â‚¬Â¢Ã‚Â°ÃƒÂ¨Ã‚Â¡Ã‚Â¨ÃƒÂ§Ã‚Â¤Ã‚ÂºÃƒÂ¥Ã‚Â¼Ã¢â€šÂ¬ÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¥Ã‚Â¤Ã…Â¡ÃƒÂ¨Ã‚Â¾Ã‚Â¹ÃƒÂ¥Ã‚Â½Ã‚Â¢ÃƒÂ¨Ã‚Â¡Ã‚Â¨ÃƒÂ©Ã¯Â¿Â½Ã‚Â¢ÃƒÂ¥Ã¢â‚¬Â°Ã¢â‚¬ï¿½ÃƒÂ©Ã¢â€žÂ¢Ã‚Â¤ÃƒÂ¥Ã…Â Ã…Â¸ÃƒÂ¨Ã†â€™Ã‚Â½  
        gl.glShadeModel(GLLightingFunc.GL_SMOOTH);

        // ÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â¨ÃƒÂ§Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°  
        gl.glEnable(GL2.GL_LIGHTING);  
        // ÃƒÂ¨Ã‚Â®Ã‚Â¾ÃƒÂ§Ã‚Â½Ã‚Â®ÃƒÂ§Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°  
        gl.glLightModelfv(GL2.GL_LIGHT_MODEL_AMBIENT, whiteLight, 0);  
        gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_DIFFUSE, sourceLight, 0);  
        gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION, lightPos, 0);  
        gl.glEnable(GL2.GL_LIGHT0);  
        // ÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â¨ÃƒÂ¦Ã¯Â¿Â½Ã¯Â¿Â½ÃƒÂ¨Ã‚Â´Ã‚Â¨  
       gl.glEnable(GL2.GL_COLOR_MATERIAL);  
       // ÃƒÂ¥Ã¢â‚¬Â Ã‚Â³ÃƒÂ¥Ã‚Â®Ã…Â¡ÃƒÂ¥Ã‚Â¯Ã‚Â¹ÃƒÂ§Ã¢â‚¬Â°Ã‚Â©ÃƒÂ¤Ã‚Â½Ã¢â‚¬Å“ÃƒÂ§Ã…Â¡Ã¢â‚¬Å¾ÃƒÂ¦Ã‚Â­Ã‚Â£ÃƒÂ©Ã¯Â¿Â½Ã‚Â¢ÃƒÂ¨Ã‚Â¿Ã‹Å“ÃƒÂ¦Ã‹Å“Ã‚Â¯ÃƒÂ¥Ã¯Â¿Â½Ã¯Â¿Â½ÃƒÂ©Ã¯Â¿Â½Ã‚Â¢ÃƒÂ¯Ã‚Â¼Ã…â€™ÃƒÂ¥Ã‚Â¯Ã‚Â¹ÃƒÂ§Ã…Â½Ã‚Â¯ÃƒÂ¥Ã‚Â¢Ã†â€™ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°ÃƒÂ£Ã¢â€šÂ¬Ã¯Â¿Â½ÃƒÂ©Ã¢â‚¬Â¢Ã…â€œÃƒÂ©Ã¯Â¿Â½Ã‚Â¢ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°ÃƒÂ¨Ã‚Â¿Ã‹Å“ÃƒÂ¦Ã‹Å“Ã‚Â¯ÃƒÂ¦Ã‚Â¼Ã‚Â«ÃƒÂ¥Ã‚Â°Ã¢â‚¬Å¾ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°ÃƒÂ¨Ã‚Â¿Ã¢â‚¬ÂºÃƒÂ¨Ã‚Â¡Ã…â€™ÃƒÂ©Ã‚Â¢Ã…â€œÃƒÂ¨Ã¢â‚¬Â°Ã‚Â²ÃƒÂ¨Ã‚Â·Ã…Â¸ÃƒÂ¨Ã‚Â¸Ã‚ÂªÃƒÂ£Ã¢â€šÂ¬Ã¢â‚¬Å¡  
       //ÃƒÂ§Ã‚Â¬Ã‚Â¬ÃƒÂ¤Ã‚Â¸Ã¢â€šÂ¬ÃƒÂ¤Ã‚Â¸Ã‚ÂªÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬Å¡ÃƒÂ¦Ã¢â‚¬Â¢Ã‚Â°ÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¤Ã‚Â»Ã‚Â¥ÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬â€œGL_FRONTÃƒÂ£Ã¢â€šÂ¬Ã¯Â¿Â½GL_BACKÃƒÂ£Ã¢â€šÂ¬Ã¯Â¿Â½GL_FRONT_AND_BACKÃƒÂ¤Ã‚Â¸Ã‚Â­ÃƒÂ§Ã…Â¡Ã¢â‚¬Å¾ÃƒÂ¤Ã‚Â»Ã‚Â»ÃƒÂ¦Ã¢â‚¬Å¾Ã¯Â¿Â½ÃƒÂ¤Ã‚Â¸Ã¢â€šÂ¬ÃƒÂ§Ã‚Â§Ã¯Â¿Â½ÃƒÂ¯Ã‚Â¼Ã…â€™  
       //ÃƒÂ§Ã‚Â¬Ã‚Â¬ÃƒÂ¤Ã‚ÂºÃ…â€™ÃƒÂ¤Ã‚Â¸Ã‚ÂªÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬Å¡ÃƒÂ¦Ã¢â‚¬Â¢Ã‚Â°ÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¤Ã‚Â»Ã‚Â¥ÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬â€œGL_AMBIENTÃƒÂ£Ã¢â€šÂ¬Ã¯Â¿Â½GL_DIFFUSEÃƒÂ£Ã¢â€šÂ¬Ã¯Â¿Â½GL_AMBIENT_AND_DIFFUSEÃƒÂ£Ã¢â€šÂ¬Ã¯Â¿Â½GL_SPECULARÃƒÂ¤Ã‚Â¸Ã‚Â­ÃƒÂ§Ã…Â¡Ã¢â‚¬Å¾ÃƒÂ¤Ã‚Â»Ã‚Â»ÃƒÂ¦Ã¢â‚¬Å¾Ã¯Â¿Â½ÃƒÂ¤Ã‚Â¸Ã¢â€šÂ¬ÃƒÂ§Ã‚Â§Ã¯Â¿Â½ÃƒÂ£Ã¢â€šÂ¬Ã¢â‚¬Å¡  
        gl.glColorMaterial(GL.GL_FRONT, GL2.GL_AMBIENT_AND_DIFFUSE);  //ÃƒÂ¥Ã‚Â¯Ã‚Â¹ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°ÃƒÂ¨Ã‚Â·Ã…Â¸ÃƒÂ¨Ã‚Â¸Ã‚ÂªÃƒÂ£Ã¢â€šÂ¬Ã¢â‚¬Å¡
         // ÃƒÂ©Ã‚Â»Ã¢â‚¬ËœÃƒÂ¨Ã¢â‚¬Â°Ã‚Â²ÃƒÂ¨Ã†â€™Ã…â€™ÃƒÂ¦Ã¢â€žÂ¢Ã‚Â¯  
        gl.glClearColor(0.0f, 0.0f, 0.0f, 1.0f);  
    }  
    public void display(GLAutoDrawable drawable) 
    {  
    // ÃƒÂ¥Ã‚Â¡Ã‚Â«ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â¦ÃƒÂ¨Ã†â€™Ã…â€™ÃƒÂ¦Ã¢â€žÂ¢Ã‚Â¯ÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ¨Ã†â€™Ã…â€™ÃƒÂ¦Ã¢â€žÂ¢Ã‚Â¯ÃƒÂ©Ã‚Â¢Ã…â€œÃƒÂ¨Ã¢â‚¬Â°Ã‚Â²  
    gl.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT);  
    // ÃƒÂ¤Ã‚Â¿Ã¯Â¿Â½ÃƒÂ¥Ã‚Â­Ã‹Å“ÃƒÂ§Ã…Â¸Ã‚Â©ÃƒÂ©Ã‹Å“Ã‚ÂµÃƒÂ§Ã…Â Ã‚Â¶ÃƒÂ¦Ã¢â€šÂ¬Ã¯Â¿Â½ÃƒÂ¥Ã¢â‚¬â„¢Ã…â€™ÃƒÂ¥Ã¯Â¿Â½Ã…Â¡ÃƒÂ¦Ã¢â‚¬â€�Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â½Ã‚Â¬  
    gl.glMatrixMode(GL2.GL_MODELVIEW);  
    gl.glPushMatrix();  
    // ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â»ÃƒÂ¥Ã¢â‚¬ÂºÃ‚Â¾ÃƒÂ§Ã¢â‚¬Å¡Ã‚Â¹ÃƒÂ§Ã‚Â§Ã‚Â»ÃƒÂ¥Ã…Â Ã‚Â¨ÃƒÂ¥Ã‹â€ Ã‚Â°ZÃƒÂ©Ã¢â‚¬Â¡Ã…â€™300ÃƒÂ§Ã…Â¡Ã¢â‚¬Å¾ÃƒÂ¤Ã‚Â½Ã¯Â¿Â½ÃƒÂ§Ã‚Â½Ã‚Â®,ÃƒÂ¨Ã‚Â´Ã…Â¸ÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬ËœÃƒÂ©Ã¢â‚¬Â¡Ã…â€™,ÃƒÂ¦Ã‚Â­Ã‚Â£ÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ¥Ã¯Â¿Â½Ã¢â‚¬ËœÃƒÂ§Ã‚Â¨Ã¢â‚¬Â¹ÃƒÂ¥Ã‚ÂºÃ¯Â¿Â½ÃƒÂ¥Ã¢â‚¬ËœÃ‹Å“.  
    gl.glTranslatef(0.0f, 0.0f, -300.0f);  
    // Set material color, Red
    
    
    // ÃƒÂ¥Ã‚Â¤Ã‚ÂªÃƒÂ©Ã‹Å“Ã‚Â³  
    gl.glDisable(GL2.GL_LIGHTING);  
    gl.glColor4ub((byte)255,(byte)255,(byte)0,(byte)0);
    glut.glutSolidSphere(30.0f, 30, 17);  //(size,unknown,speed)
    gl.glEnable(GL2.GL_LIGHTING); 
    // ÃƒÂ©Ã¢â‚¬Â¡Ã¯Â¿Â½ÃƒÂ¦Ã¢â‚¬â€œÃ‚Â°ÃƒÂ¨Ã‚Â®Ã‚Â¾ÃƒÂ§Ã‚Â½Ã‚Â®ÃƒÂ§Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¥Ã¢â‚¬Â¦Ã¢â‚¬Â°ÃƒÂ¥Ã‹â€ Ã‚Â°ÃƒÂ¥Ã‚Â¤Ã‚ÂªÃƒÂ©Ã‹Å“Ã‚Â³ÃƒÂ§Ã…Â¡Ã¢â‚¬Å¾ÃƒÂ¤Ã‚Â½Ã¯Â¿Â½ÃƒÂ§Ã‚Â½Ã‚Â®  
    gl.glLightfv(GL2.GL_LIGHT0,GL2.GL_POSITION,lightPos,0);  
    // ÃƒÂ¥Ã¢â‚¬ÂºÃ‚Â´ÃƒÂ§Ã‚Â»Ã¢â‚¬Â¢YÃƒÂ¨Ã‚Â½Ã‚Â´ÃƒÂ¦Ã¢â‚¬â€�Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â½Ã‚Â¬ÃƒÂ§Ã…Â¸Ã‚Â©ÃƒÂ©Ã‹Å“Ã‚Âµ  
   // float k= -3.0f;
    
    gl.glRotatef(fEarthRot, -0.1f, 1.0f, 0.0f);  
    
    // ÃƒÂ§Ã¢â‚¬ï¿½Ã‚Â»ÃƒÂ¥Ã…â€œÃ‚Â°ÃƒÂ§Ã¯Â¿Â½Ã†â€™  
    gl.glColor3ub((byte)0,(byte)200,(byte)255);  
    gl.glTranslatef(105.0f,0.0f,0.0f);  
    glut.glutSolidSphere(15.0f, 30, 17);  
    //ÃƒÂ¥Ã¢â‚¬ÂºÃ‚Â´ÃƒÂ§Ã‚Â»Ã¢â‚¬Â¢YÃƒÂ¨Ã‚Â½Ã‚Â´ÃƒÂ¦Ã¢â‚¬â€�Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â½Ã‚Â¬ÃƒÂ§Ã…Â¸Ã‚Â©ÃƒÂ©Ã‹Å“Ã‚Âµ,ÃƒÂ¥Ã‚Â½Ã¢â‚¬Å“ÃƒÂ¥Ã¢â‚¬Â°Ã¯Â¿Â½ÃƒÂ¦Ã¢â‚¬â€�Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â½Ã‚Â¬ÃƒÂ¤Ã‚Â¸Ã‚Â­ÃƒÂ¥Ã‚Â¿Ã†â€™ÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ¥Ã…â€œÃ‚Â°ÃƒÂ§Ã¯Â¿Â½Ã†â€™,ÃƒÂ¨Ã‚Â¢Ã‚Â«ÃƒÂ¦Ã¢â‚¬â€�Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â½Ã‚Â¬ÃƒÂ§Ã…Â¡Ã¢â‚¬Å¾ÃƒÂ¦Ã‹Å“Ã‚Â¯ÃƒÂ¦Ã…â€œÃ‹â€ ÃƒÂ§Ã¯Â¿Â½Ã†â€™  
    gl.glColor3ub((byte)200,(byte)200,(byte)200);  
    gl.glRotatef(fMoonRot,0.0f, 1.0f, 0.0f);  
    
    gl.glTranslatef(30.0f, 0.0f, 0.0f);  
    fMoonRot+= 5.0f;  
    if(fMoonRot > 360.0f)  
        fMoonRot = 0.0f;  
    glut.glutSolidSphere(6.0f, 30, 17);  
    // ÃƒÂ¨Ã‚Â¿Ã‹Å“ÃƒÂ¥Ã…Â½Ã…Â¸ÃƒÂ§Ã…Â Ã‚Â¶ÃƒÂ¦Ã¢â€šÂ¬Ã¯Â¿Â½ÃƒÂ§Ã…Â¸Ã‚Â©ÃƒÂ©Ã‹Å“Ã‚Âµ  
    gl.glPopMatrix();   // Modelview matrix  
    //ÃƒÂ¥Ã…â€œÃ‚Â°ÃƒÂ§Ã¯Â¿Â½Ã†â€™ÃƒÂ¨Ã‚Â½Ã‚Â¨ÃƒÂ©Ã¯Â¿Â½Ã¢â‚¬Å“ÃƒÂ¦Ã‚Â¯Ã¯Â¿Â½ÃƒÂ¦Ã‚Â­Ã‚Â¥5ÃƒÂ¥Ã‚ÂºÃ‚Â¦,ÃƒÂ¦Ã¢â‚¬â€�Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â½Ã‚Â¬ÃƒÂ¥Ã‚ÂºÃ‚Â¦ÃƒÂ¦Ã¢â‚¬Â¢Ã‚Â°  
    fEarthRot += 0.5f;  
    if(fEarthRot > 360.0f)  
        fEarthRot = 0.0f;  
   }  
    public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height) 
    {  
    	//GL2 gl = drawable.getGL().getGL2();

        float fAspect; 
       // ÃƒÂ©Ã‹Å“Ã‚Â²ÃƒÂ¦Ã‚Â­Ã‚Â¢ÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ©Ã¢â‚¬ÂºÃ‚Â¶  
        height = (height == 0) ? 1 : height; 
        //ÃƒÂ¨Ã‚Â§Ã¢â‚¬Â ÃƒÂ¥Ã¯Â¿Â½Ã‚Â£ÃƒÂ¨Ã‚Â®Ã‚Â¾ÃƒÂ§Ã‚Â½Ã‚Â®ÃƒÂ¤Ã‚Â¸Ã‚ÂºÃƒÂ§Ã‚ÂªÃ¢â‚¬â€�ÃƒÂ¥Ã¯Â¿Â½Ã‚Â£ÃƒÂ¥Ã‚Â°Ã‚ÂºÃƒÂ¥Ã‚Â¯Ã‚Â¸  
        gl.glViewport(0, 0, width, height);  
        fAspect = (float) width / height;  
        // Reset projection matrix stack  
        gl.glMatrixMode(GL2.GL_PROJECTION); //ÃƒÂ§Ã‚Â¡Ã‚Â®ÃƒÂ¥Ã‚Â®Ã…Â¡ÃƒÂ¦Ã…Â Ã¢â‚¬Â¢ÃƒÂ¥Ã‚Â½Ã‚Â±
        gl.glLoadIdentity();  //ÃƒÂ¥Ã‚Â Ã¢â‚¬Â ÃƒÂ¦Ã‚Â Ã‹â€ ÃƒÂ©Ã¢â‚¬Â¡Ã¯Â¿Â½ÃƒÂ¨Ã‚Â®Ã‚Â¾ 
        //ÃƒÂ©Ã¢â€šÂ¬Ã¯Â¿Â½ÃƒÂ¨Ã‚Â§Ã¢â‚¬Â ÃƒÂ¦Ã…Â Ã¢â‚¬Â¢ÃƒÂ¥Ã‚Â½Ã‚Â± ÃƒÂ§Ã…â€œÃ‚Â¼ÃƒÂ¨Ã‚Â§Ã¢â‚¬â„¢ÃƒÂ¥Ã‚ÂºÃ‚Â¦,ÃƒÂ¦Ã‚Â¯Ã¢â‚¬ï¿½ÃƒÂ¤Ã‚Â¾Ã¢â‚¬Â¹,ÃƒÂ¨Ã‚Â¿Ã¢â‚¬ËœÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¨Ã‚Â§Ã¢â‚¬Â ,ÃƒÂ¨Ã‚Â¿Ã…â€œÃƒÂ¥Ã¯Â¿Â½Ã‚Â¯ÃƒÂ¨Ã‚Â§Ã¢â‚¬Â   
        glu.gluPerspective(45.0f, fAspect, 1.0, 400.0);  
        // ÃƒÂ©Ã¢â‚¬Â¡Ã¯Â¿Â½ÃƒÂ§Ã‚Â½Ã‚Â®ÃƒÂ¦Ã‚Â¨Ã‚Â¡ÃƒÂ¥Ã…Â¾Ã¢â‚¬Â¹ÃƒÂ¨Ã‚Â§Ã¢â‚¬Å¡ÃƒÂ¥Ã‚Â¯Ã…Â¸ÃƒÂ§Ã…Â¸Ã‚Â©ÃƒÂ©Ã‹Å“Ã‚ÂµÃƒÂ¥Ã‚Â Ã¢â‚¬Â ÃƒÂ¦Ã‚Â Ã‹â€   
        gl.glMatrixMode(GL2.GL_MODELVIEW);  //ÃƒÂ§Ã‚Â¡Ã‚Â®ÃƒÂ¥Ã‚Â®Ã…Â¡ÃƒÂ¨Ã‚Â§Ã¢â‚¬Å¡ÃƒÂ¥Ã‚Â¯Ã…Â¸
        gl.glLoadIdentity();  
    }  
    public void dispose(GLAutoDrawable arg0) 
    {       
    }  
}  
